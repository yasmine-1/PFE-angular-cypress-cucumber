{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport boxesJson from '../_db.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/material/grid-list\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../box/box.component\";\n\nfunction DashboardComponent_mat_grid_tile_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 3);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelement(3, \"app-box\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const box_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵproperty(\"colspan\", (tmp_0_0 = i0.ɵɵpipeBind1(1, 3, ctx_r0.cardLayout)) == null ? null : tmp_0_0.miniCard.cols)(\"rowspan\", (tmp_1_0 = i0.ɵɵpipeBind1(2, 5, ctx_r0.cardLayout)) == null ? null : tmp_1_0.miniCard.rows);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"box\", box_r1);\n  }\n}\n\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(breakpointObserver) {\n      this.breakpointObserver = breakpointObserver;\n      this.boxes = boxesJson;\n      this.cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(({\n        matches\n      }) => {\n        if (matches) {\n          return {\n            miniCard: {\n              cols: 1,\n              rows: 1\n            }\n          };\n        }\n\n        return {\n          miniCard: {\n            cols: 1,\n            rows: 1\n          }\n        };\n      }));\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"grid-container\"], [\"cols\", \"3\", \"rowHeight\", \"270px\"], [3, \"colspan\", \"rowspan\", 4, \"ngFor\", \"ngForOf\"], [3, \"colspan\", \"rowspan\"], [3, \"box\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-grid-list\", 1);\n        i0.ɵɵtemplate(2, DashboardComponent_mat_grid_tile_2_Template, 4, 7, \"mat-grid-tile\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.boxes);\n      }\n    },\n    directives: [i2.MatGridList, i3.NgForOf, i2.MatGridTile, i4.BoxComponent],\n    pipes: [i3.AsyncPipe],\n    styles: [\".grid-container[_ngcontent-%COMP%]{margin:20px}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}