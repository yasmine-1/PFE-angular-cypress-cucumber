{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { Pipe, forwardRef, EventEmitter, ChangeDetectorRef, Input, Output, HostListener, Component, ChangeDetectionStrategy, ElementRef, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction MultiSelectComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0._placeholder);\n  }\n}\n\nfunction MultiSelectComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 16);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"a\", 17);\n    ɵngcc0.ɵɵlistener(\"click\", function MultiSelectComponent_span_4_Template_a_click_4_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r11);\n      const item_r8 = restoredCtx.$implicit;\n      const ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.onItemClick($event, item_r8);\n    });\n    ɵngcc0.ɵɵtext(5, \"x\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    const k_r9 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"hidden\", k_r9 > ctx_r1._settings.itemsShowLimit - 1);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", item_r8.text, \"\\u00A0\");\n  }\n}\n\nfunction MultiSelectComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 18);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"+\", ctx_r2.itemShowRemaining(), \"\");\n  }\n}\n\nfunction MultiSelectComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 19);\n    ɵngcc0.ɵɵlistener(\"click\", function MultiSelectComponent_li_10_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      const ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.toggleSelectAll();\n    });\n    ɵngcc0.ɵɵelement(1, \"input\", 20);\n    ɵngcc0.ɵɵelementStart(2, \"div\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r3.isAllItemsSelected())(\"disabled\", ctx_r3.disabled || ctx_r3.isLimitSelectionReached());\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(!ctx_r3.isAllItemsSelected() ? ctx_r3._settings.selectAllText : ctx_r3._settings.unSelectAllText);\n  }\n}\n\nfunction MultiSelectComponent_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 21);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 22);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function MultiSelectComponent_li_11_Template_input_ngModelChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      const ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.filter.text = $event;\n    })(\"ngModelChange\", function MultiSelectComponent_li_11_Template_input_ngModelChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      const ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return ctx_r16.onFilterTextChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"readOnly\", ctx_r4.disabled)(\"placeholder\", ctx_r4._settings.searchPlaceholderText)(\"ngModel\", ctx_r4.filter.text);\n  }\n}\n\nfunction MultiSelectComponent_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MultiSelectComponent_li_13_Template_li_click_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r20);\n      const item_r17 = restoredCtx.$implicit;\n      const ctx_r19 = ɵngcc0.ɵɵnextContext();\n      return ctx_r19.onItemClick($event, item_r17);\n    });\n    ɵngcc0.ɵɵelement(1, \"input\", 24);\n    ɵngcc0.ɵɵelementStart(2, \"div\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r17 = ctx.$implicit;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"checked\", ctx_r5.isSelected(item_r17))(\"disabled\", ctx_r5.disabled || ctx_r5.isLimitSelectionReached() && !ctx_r5.isSelected(item_r17) || item_r17.isDisabled);\n    ɵngcc0.ɵɵattribute(\"aria-label\", item_r17.text);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(item_r17.text);\n  }\n}\n\nfunction MultiSelectComponent_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 25);\n    ɵngcc0.ɵɵelementStart(1, \"h5\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6._settings.noFilteredDataAvailablePlaceholderText);\n  }\n}\n\nfunction MultiSelectComponent_li_17_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 26);\n    ɵngcc0.ɵɵelementStart(1, \"h5\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._settings.noDataAvailablePlaceholderText);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"dropdown-multiselect--active\": a0\n  };\n};\n\nclass ListItem {\n  constructor(source) {\n    if (typeof source === 'string' || typeof source === 'number') {\n      this.id = this.text = source;\n      this.isDisabled = false;\n    }\n\n    if (typeof source === 'object') {\n      this.id = source.id;\n      this.text = source.text;\n      this.isDisabled = source.isDisabled;\n    }\n  }\n\n}\n\nlet ListFilterPipe = /*#__PURE__*/(() => {\n  let ListFilterPipe = class ListFilterPipe {\n    transform(items, filter) {\n      if (!items || !filter) {\n        return items;\n      }\n\n      return items.filter(item => this.applyFilter(item, filter));\n    }\n\n    applyFilter(item, filter) {\n      if (typeof item.text === 'string' && typeof filter.text === 'string') {\n        return !(filter.text && item.text && item.text.toLowerCase().indexOf(filter.text.toLowerCase()) === -1);\n      } else {\n        return !(filter.text && item.text && item.text.toString().toLowerCase().indexOf(filter.text.toString().toLowerCase()) === -1);\n      }\n    }\n\n  };\n\n  ListFilterPipe.ɵfac = function ListFilterPipe_Factory(t) {\n    return new (t || ListFilterPipe)();\n  };\n\n  ListFilterPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n    name: \"multiSelectFilter\",\n    type: ListFilterPipe,\n    pure: false\n  });\n  return ListFilterPipe;\n})();\nconst DROPDOWN_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MultiSelectComponent),\n  multi: true\n};\n\nconst noop = () => {};\n\nconst ɵ0 = noop;\nlet MultiSelectComponent = /*#__PURE__*/(() => {\n  let MultiSelectComponent = class MultiSelectComponent {\n    constructor(listFilterPipe, cdr) {\n      this.listFilterPipe = listFilterPipe;\n      this.cdr = cdr;\n      this._data = [];\n      this.selectedItems = [];\n      this.isDropdownOpen = true;\n      this._placeholder = \"Select\";\n      this._sourceDataType = null; // to keep note of the source data type. could be array of string/number/object\n\n      this._sourceDataFields = []; // store source data fields names\n\n      this.filter = new ListItem(this.data);\n      this.defaultSettings = {\n        singleSelection: false,\n        idField: \"id\",\n        textField: \"text\",\n        disabledField: \"isDisabled\",\n        enableCheckAll: true,\n        selectAllText: \"Select All\",\n        unSelectAllText: \"UnSelect All\",\n        allowSearchFilter: false,\n        limitSelection: -1,\n        clearSearchFilter: true,\n        maxHeight: 197,\n        itemsShowLimit: 999999999999,\n        searchPlaceholderText: \"Search\",\n        noDataAvailablePlaceholderText: \"No data available\",\n        noFilteredDataAvailablePlaceholderText: \"No filtered data available\",\n        closeDropDownOnSelection: false,\n        showSelectedItemsAtTop: false,\n        defaultOpen: false,\n        allowRemoteDataSearch: false\n      };\n      this.disabled = false;\n      this.onFilterChange = new EventEmitter();\n      this.onDropDownClose = new EventEmitter();\n      this.onSelect = new EventEmitter();\n      this.onDeSelect = new EventEmitter();\n      this.onSelectAll = new EventEmitter();\n      this.onDeSelectAll = new EventEmitter();\n      this.onTouchedCallback = noop;\n      this.onChangeCallback = noop;\n    }\n\n    set placeholder(value) {\n      if (value) {\n        this._placeholder = value;\n      } else {\n        this._placeholder = \"Select\";\n      }\n    }\n\n    set settings(value) {\n      if (value) {\n        this._settings = Object.assign(this.defaultSettings, value);\n      } else {\n        this._settings = Object.assign(this.defaultSettings);\n      }\n    }\n\n    set data(value) {\n      if (!value) {\n        this._data = [];\n      } else {\n        const firstItem = value[0];\n        this._sourceDataType = typeof firstItem;\n        this._sourceDataFields = this.getFields(firstItem);\n        this._data = value.map(item => typeof item === \"string\" || typeof item === \"number\" ? new ListItem(item) : new ListItem({\n          id: item[this._settings.idField],\n          text: item[this._settings.textField],\n          isDisabled: item[this._settings.disabledField]\n        }));\n      }\n    }\n\n    onFilterTextChange($event) {\n      this.onFilterChange.emit($event);\n    }\n\n    onItemClick($event, item) {\n      if (this.disabled || item.isDisabled) {\n        return false;\n      }\n\n      const found = this.isSelected(item);\n      const allowAdd = this._settings.limitSelection === -1 || this._settings.limitSelection > 0 && this.selectedItems.length < this._settings.limitSelection;\n\n      if (!found) {\n        if (allowAdd) {\n          this.addSelected(item);\n        }\n      } else {\n        this.removeSelected(item);\n      }\n\n      if (this._settings.singleSelection && this._settings.closeDropDownOnSelection) {\n        this.closeDropdown();\n      }\n    }\n\n    writeValue(value) {\n      if (value !== undefined && value !== null && value.length > 0) {\n        if (this._settings.singleSelection) {\n          try {\n            if (value.length >= 1) {\n              const firstItem = value[0];\n              this.selectedItems = [typeof firstItem === \"string\" || typeof firstItem === \"number\" ? new ListItem(firstItem) : new ListItem({\n                id: firstItem[this._settings.idField],\n                text: firstItem[this._settings.textField],\n                isDisabled: firstItem[this._settings.disabledField]\n              })];\n            }\n          } catch (e) {// console.error(e.body.msg);\n          }\n        } else {\n          const _data = value.map(item => typeof item === \"string\" || typeof item === \"number\" ? new ListItem(item) : new ListItem({\n            id: item[this._settings.idField],\n            text: item[this._settings.textField],\n            isDisabled: item[this._settings.disabledField]\n          }));\n\n          if (this._settings.limitSelection > 0) {\n            this.selectedItems = _data.splice(0, this._settings.limitSelection);\n          } else {\n            this.selectedItems = _data;\n          }\n        }\n      } else {\n        this.selectedItems = [];\n      }\n\n      this.onChangeCallback(value);\n      this.cdr.markForCheck();\n    } // From ControlValueAccessor interface\n\n\n    registerOnChange(fn) {\n      this.onChangeCallback = fn;\n    } // From ControlValueAccessor interface\n\n\n    registerOnTouched(fn) {\n      this.onTouchedCallback = fn;\n    } // Set touched on blur\n\n\n    onTouched() {\n      // this.closeDropdown();\n      this.onTouchedCallback();\n    }\n\n    trackByFn(index, item) {\n      return item.id;\n    }\n\n    isSelected(clickedItem) {\n      let found = false;\n      this.selectedItems.forEach(item => {\n        if (clickedItem.id === item.id) {\n          found = true;\n        }\n      });\n      return found;\n    }\n\n    isLimitSelectionReached() {\n      return this._settings.limitSelection === this.selectedItems.length;\n    }\n\n    isAllItemsSelected() {\n      // get disabld item count\n      let filteredItems = this.listFilterPipe.transform(this._data, this.filter);\n      const itemDisabledCount = filteredItems.filter(item => item.isDisabled).length; // take disabled items into consideration when checking\n\n      if ((!this.data || this.data.length === 0) && this._settings.allowRemoteDataSearch) {\n        return false;\n      }\n\n      return filteredItems.length === this.selectedItems.length + itemDisabledCount;\n    }\n\n    showButton() {\n      if (!this._settings.singleSelection) {\n        if (this._settings.limitSelection > 0) {\n          return false;\n        } // this._settings.enableCheckAll = this._settings.limitSelection === -1 ? true : false;\n\n\n        return true; // !this._settings.singleSelection && this._settings.enableCheckAll && this._data.length > 0;\n      } else {\n        // should be disabled in single selection mode\n        return false;\n      }\n    }\n\n    itemShowRemaining() {\n      return this.selectedItems.length - this._settings.itemsShowLimit;\n    }\n\n    addSelected(item) {\n      if (this._settings.singleSelection) {\n        this.selectedItems = [];\n        this.selectedItems.push(item);\n      } else {\n        this.selectedItems.push(item);\n      }\n\n      this.onChangeCallback(this.emittedValue(this.selectedItems));\n      this.onSelect.emit(this.emittedValue(item));\n    }\n\n    removeSelected(itemSel) {\n      this.selectedItems.forEach(item => {\n        if (itemSel.id === item.id) {\n          this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n        }\n      });\n      this.onChangeCallback(this.emittedValue(this.selectedItems));\n      this.onDeSelect.emit(this.emittedValue(itemSel));\n    }\n\n    emittedValue(val) {\n      const selected = [];\n\n      if (Array.isArray(val)) {\n        val.map(item => {\n          selected.push(this.objectify(item));\n        });\n      } else {\n        if (val) {\n          return this.objectify(val);\n        }\n      }\n\n      return selected;\n    }\n\n    objectify(val) {\n      if (this._sourceDataType === 'object') {\n        const obj = {};\n        obj[this._settings.idField] = val.id;\n        obj[this._settings.textField] = val.text;\n\n        if (this._sourceDataFields.includes(this._settings.disabledField)) {\n          obj[this._settings.disabledField] = val.isDisabled;\n        }\n\n        return obj;\n      }\n\n      if (this._sourceDataType === 'number') {\n        return Number(val.id);\n      } else {\n        return val.text;\n      }\n    }\n\n    toggleDropdown(evt) {\n      evt.preventDefault();\n\n      if (this.disabled && this._settings.singleSelection) {\n        return;\n      }\n\n      this._settings.defaultOpen = !this._settings.defaultOpen;\n\n      if (!this._settings.defaultOpen) {\n        this.onDropDownClose.emit();\n      }\n    }\n\n    closeDropdown() {\n      this._settings.defaultOpen = false; // clear search text\n\n      if (this._settings.clearSearchFilter) {\n        this.filter.text = \"\";\n      }\n\n      this.onDropDownClose.emit();\n    }\n\n    toggleSelectAll() {\n      if (this.disabled) {\n        return false;\n      }\n\n      if (!this.isAllItemsSelected()) {\n        // filter out disabled item first before slicing\n        this.selectedItems = this.listFilterPipe.transform(this._data, this.filter).filter(item => !item.isDisabled).slice();\n        this.onSelectAll.emit(this.emittedValue(this.selectedItems));\n      } else {\n        this.selectedItems = [];\n        this.onDeSelectAll.emit(this.emittedValue(this.selectedItems));\n      }\n\n      this.onChangeCallback(this.emittedValue(this.selectedItems));\n    }\n\n    getFields(inputData) {\n      const fields = [];\n\n      if (typeof inputData !== \"object\") {\n        return fields;\n      } // tslint:disable-next-line:forin\n\n\n      for (const prop in inputData) {\n        fields.push(prop);\n      }\n\n      return fields;\n    }\n\n  };\n\n  MultiSelectComponent.ɵfac = function MultiSelectComponent_Factory(t) {\n    return new (t || MultiSelectComponent)(ɵngcc0.ɵɵdirectiveInject(ListFilterPipe), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  MultiSelectComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MultiSelectComponent,\n    selectors: [[\"ng-multiselect-dropdown\"]],\n    hostBindings: function MultiSelectComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function MultiSelectComponent_blur_HostBindingHandler() {\n          return ctx.onTouched();\n        });\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      placeholder: \"placeholder\",\n      settings: \"settings\",\n      data: \"data\"\n    },\n    outputs: {\n      onFilterChange: \"onFilterChange\",\n      onDropDownClose: \"onDropDownClose\",\n      onSelect: \"onSelect\",\n      onDeSelect: \"onDeSelect\",\n      onSelectAll: \"onSelectAll\",\n      onDeSelectAll: \"onDeSelectAll\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DROPDOWN_CONTROL_VALUE_ACCESSOR])],\n    decls: 18,\n    vars: 23,\n    consts: [[\"tabindex\", \"0\", 1, \"multiselect-dropdown\", 3, \"blur\", \"clickOutside\"], [\"tabindex\", \"-1\", 1, \"dropdown-btn\", 3, \"click\"], [4, \"ngIf\"], [\"class\", \"selected-item-container\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [2, \"float\", \"right !important\", \"padding-right\", \"4px\", 3, \"ngClass\"], [\"style\", \"padding-right: 15px;\", 4, \"ngIf\"], [1, \"dropdown-multiselect__caret\"], [1, \"dropdown-list\", 3, \"hidden\"], [1, \"item1\"], [\"class\", \"multiselect-item-checkbox\", \"style\", \"border-bottom: 1px solid #ccc;padding:10px\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"filter-textbox\", 4, \"ngIf\"], [1, \"item2\"], [\"class\", \"multiselect-item-checkbox\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"no-filtered-data\", 4, \"ngIf\"], [\"class\", \"no-data\", 4, \"ngIf\"], [1, \"selected-item-container\"], [1, \"selected-item\", 3, \"hidden\"], [2, \"padding-left\", \"2px\", \"color\", \"white\", 3, \"click\"], [2, \"padding-right\", \"15px\"], [1, \"multiselect-item-checkbox\", 2, \"border-bottom\", \"1px solid #ccc\", \"padding\", \"10px\", 3, \"click\"], [\"type\", \"checkbox\", \"aria-label\", \"multiselect-select-all\", 3, \"checked\", \"disabled\"], [1, \"filter-textbox\"], [\"type\", \"text\", \"aria-label\", \"multiselect-search\", 3, \"readOnly\", \"placeholder\", \"ngModel\", \"ngModelChange\"], [1, \"multiselect-item-checkbox\", 3, \"click\"], [\"type\", \"checkbox\", 3, \"checked\", \"disabled\"], [1, \"no-filtered-data\"], [1, \"no-data\"]],\n    template: function MultiSelectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"blur\", function MultiSelectComponent_Template_div_blur_0_listener() {\n          return ctx.onTouched();\n        })(\"clickOutside\", function MultiSelectComponent_Template_div_clickOutside_0_listener() {\n          return ctx.closeDropdown();\n        });\n        ɵngcc0.ɵɵelementStart(1, \"div\");\n        ɵngcc0.ɵɵelementStart(2, \"span\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MultiSelectComponent_Template_span_click_2_listener($event) {\n          return ctx.toggleDropdown($event);\n        });\n        ɵngcc0.ɵɵtemplate(3, MultiSelectComponent_span_3_Template, 2, 1, \"span\", 2);\n        ɵngcc0.ɵɵtemplate(4, MultiSelectComponent_span_4_Template, 6, 2, \"span\", 3);\n        ɵngcc0.ɵɵelementStart(5, \"span\", 4);\n        ɵngcc0.ɵɵtemplate(6, MultiSelectComponent_span_6_Template, 2, 1, \"span\", 5);\n        ɵngcc0.ɵɵelement(7, \"span\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(8, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(9, \"ul\", 8);\n        ɵngcc0.ɵɵtemplate(10, MultiSelectComponent_li_10_Template, 4, 3, \"li\", 9);\n        ɵngcc0.ɵɵtemplate(11, MultiSelectComponent_li_11_Template, 2, 3, \"li\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"ul\", 11);\n        ɵngcc0.ɵɵtemplate(13, MultiSelectComponent_li_13_Template, 4, 4, \"li\", 12);\n        ɵngcc0.ɵɵpipe(14, \"multiSelectFilter\");\n        ɵngcc0.ɵɵtemplate(15, MultiSelectComponent_li_15_Template, 3, 1, \"li\", 13);\n        ɵngcc0.ɵɵpipe(16, \"multiSelectFilter\");\n        ɵngcc0.ɵɵtemplate(17, MultiSelectComponent_li_17_Template, 3, 1, \"li\", 14);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectedItems.length == 0);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.selectedItems)(\"ngForTrackBy\", ctx.trackByFn);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(21, _c0, ctx._settings.defaultOpen));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.itemShowRemaining() > 0);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"hidden\", !ctx._settings.defaultOpen);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", (ctx._data.length > 0 || ctx._settings.allowRemoteDataSearch) && !ctx._settings.singleSelection && ctx._settings.enableCheckAll && ctx._settings.limitSelection === -1);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", (ctx._data.length > 0 || ctx._settings.allowRemoteDataSearch) && ctx._settings.allowSearchFilter);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"max-height\", ctx._settings.maxHeight + \"px\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind2(14, 15, ctx._data, ctx.filter));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._data.length != 0 && ɵngcc0.ɵɵpipeBind2(16, 18, ctx._data, ctx.filter).length == 0 && !ctx._settings.allowRemoteDataSearch);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._data.length == 0 && !ctx._settings.allowRemoteDataSearch);\n      }\n    },\n    directives: function () {\n      return [ClickOutsideDirective, ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel];\n    },\n    pipes: function () {\n      return [ListFilterPipe];\n    },\n    styles: [\".multiselect-dropdown[_ngcontent-%COMP%]{position:relative;width:100%;font-size:inherit;font-family:inherit}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-weight:400;line-height:1.52857143;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .selected-item-container[_ngcontent-%COMP%]{display:flex;float:left}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .selected-item-container[_ngcontent-%COMP%]   .selected-item[_ngcontent-%COMP%]{border:1px solid #337ab7;margin-right:4px;background:#337ab7;padding:0 5px;color:#fff;border-radius:2px;float:left;max-width:100px}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .selected-item-container[_ngcontent-%COMP%]   .selected-item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .selected-item-container[_ngcontent-%COMP%]   .selected-item[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .selected-item[_ngcontent-%COMP%]:hover{box-shadow:1px 1px #959595}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .dropdown-multiselect__caret[_ngcontent-%COMP%]{line-height:16px;display:block;position:absolute;box-sizing:border-box;width:40px;height:38px;right:1px;top:0;padding:4px 8px;margin:0;text-decoration:none;text-align:center;cursor:pointer;transition:transform .2s}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .dropdown-multiselect__caret[_ngcontent-%COMP%]:before{position:relative;right:0;top:65%;color:#999;margin-top:4px;border-style:solid;border-width:8px 8px 0;border-color:#999 transparent;content:\\\"\\\"}.multiselect-dropdown[_ngcontent-%COMP%]   .dropdown-btn[_ngcontent-%COMP%]   .dropdown-multiselect--active[_ngcontent-%COMP%]   .dropdown-multiselect__caret[_ngcontent-%COMP%]{transform:rotateZ(180deg)}.multiselect-dropdown[_ngcontent-%COMP%]   .disabled[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{background-color:#eceeef}.dropdown-list[_ngcontent-%COMP%]{position:absolute;padding-top:6px;width:100%;z-index:9999;border:1px solid #ccc;border-radius:3px;background:#fff;margin-top:10px;box-shadow:0 1px 5px #959595}.dropdown-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:6px 10px;cursor:pointer;text-align:left}.dropdown-list[_ngcontent-%COMP%]   .filter-textbox[_ngcontent-%COMP%]{border-bottom:1px solid #ccc;position:relative;padding:10px}.dropdown-list[_ngcontent-%COMP%]   .filter-textbox[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:0;width:100%;padding:0 0 0 26px}.dropdown-list[_ngcontent-%COMP%]   .filter-textbox[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:0}.multiselect-item-checkbox[_ngcontent-%COMP%]:hover{background-color:#e4e3e3}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:focus + div[_ngcontent-%COMP%]:before, .multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:hover + div[_ngcontent-%COMP%]:before{border-color:#337ab7;background-color:#f2f2f2}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:active + div[_ngcontent-%COMP%]:before{transition-duration:0s}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%] + div[_ngcontent-%COMP%]{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;margin:0;color:#000}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%] + div[_ngcontent-%COMP%]:before{box-sizing:content-box;content:\\\"\\\";color:#337ab7;position:absolute;top:50%;left:0;width:14px;height:14px;margin-top:-9px;border:2px solid #337ab7;text-align:center;transition:.4s}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%] + div[_ngcontent-%COMP%]:after{box-sizing:content-box;content:\\\"\\\";position:absolute;transform:scale(0);transform-origin:50%;transition:transform .2s ease-out;background-color:transparent;top:50%;left:4px;width:8px;height:3px;margin-top:-4px;border-style:solid;border-color:#fff;border-width:0 0 3px 3px;-o-border-image:none;border-image:none;transform:rotate(-45deg) scale(0)}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:disabled + div[_ngcontent-%COMP%]:before{border-color:#ccc}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:disabled:focus + div[_ngcontent-%COMP%]:before   .multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:disabled:hover + div[_ngcontent-%COMP%]:before{background-color:inherit}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:disabled:checked + div[_ngcontent-%COMP%]:before{background-color:#ccc}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:checked + div[_ngcontent-%COMP%]:after{content:\\\"\\\";transition:transform .2s ease-out;transform:rotate(-45deg) scale(1)}.multiselect-item-checkbox[_ngcontent-%COMP%]   input[type=checkbox][_ngcontent-%COMP%]:checked + div[_ngcontent-%COMP%]:before{-webkit-animation:.2s ease-in borderscale;animation:.2s ease-in borderscale;background:#337ab7}@-webkit-keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}@keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}\"],\n    changeDetection: 0\n  });\n\n  __decorate([Input()], MultiSelectComponent.prototype, \"placeholder\", null);\n\n  __decorate([Input()], MultiSelectComponent.prototype, \"disabled\", void 0);\n\n  __decorate([Input()], MultiSelectComponent.prototype, \"settings\", null);\n\n  __decorate([Input()], MultiSelectComponent.prototype, \"data\", null);\n\n  __decorate([Output(\"onFilterChange\")], MultiSelectComponent.prototype, \"onFilterChange\", void 0);\n\n  __decorate([Output(\"onDropDownClose\")], MultiSelectComponent.prototype, \"onDropDownClose\", void 0);\n\n  __decorate([Output(\"onSelect\")], MultiSelectComponent.prototype, \"onSelect\", void 0);\n\n  __decorate([Output(\"onDeSelect\")], MultiSelectComponent.prototype, \"onDeSelect\", void 0);\n\n  __decorate([Output(\"onSelectAll\")], MultiSelectComponent.prototype, \"onSelectAll\", void 0);\n\n  __decorate([Output(\"onDeSelectAll\")], MultiSelectComponent.prototype, \"onDeSelectAll\", void 0);\n\n  __decorate([HostListener(\"blur\")], MultiSelectComponent.prototype, \"onTouched\", null);\n\n  return MultiSelectComponent;\n})();\nlet ClickOutsideDirective = /*#__PURE__*/(() => {\n  let ClickOutsideDirective = class ClickOutsideDirective {\n    constructor(_elementRef) {\n      this._elementRef = _elementRef;\n      this.clickOutside = new EventEmitter();\n    }\n\n    onClick(event, targetElement) {\n      if (!targetElement) {\n        return;\n      }\n\n      const clickedInside = this._elementRef.nativeElement.contains(targetElement);\n\n      if (!clickedInside) {\n        this.clickOutside.emit(event);\n      }\n    }\n\n  };\n\n  ClickOutsideDirective.ɵfac = function ClickOutsideDirective_Factory(t) {\n    return new (t || ClickOutsideDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  ClickOutsideDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ClickOutsideDirective,\n    selectors: [[\"\", \"clickOutside\", \"\"]],\n    hostBindings: function ClickOutsideDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ClickOutsideDirective_click_HostBindingHandler($event) {\n          return ctx.onClick($event, $event.target);\n        }, false, ɵngcc0.ɵɵresolveDocument);\n      }\n    },\n    outputs: {\n      clickOutside: \"clickOutside\"\n    }\n  });\n\n  __decorate([Output()], ClickOutsideDirective.prototype, \"clickOutside\", void 0);\n\n  __decorate([HostListener('document:click', ['$event', '$event.target'])], ClickOutsideDirective.prototype, \"onClick\", null);\n\n  return ClickOutsideDirective;\n})();\nvar NgMultiSelectDropDownModule_1;\nlet NgMultiSelectDropDownModule = NgMultiSelectDropDownModule_1 = class NgMultiSelectDropDownModule {\n  static forRoot() {\n    return {\n      ngModule: NgMultiSelectDropDownModule_1\n    };\n  }\n\n};\n\nNgMultiSelectDropDownModule.ɵfac = function NgMultiSelectDropDownModule_Factory(t) {\n  return new (t || NgMultiSelectDropDownModule)();\n};\n\nNgMultiSelectDropDownModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NgMultiSelectDropDownModule\n});\nNgMultiSelectDropDownModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [ListFilterPipe],\n  imports: [[CommonModule, FormsModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgMultiSelectDropDownModule, {\n    declarations: function () {\n      return [MultiSelectComponent, ClickOutsideDirective, ListFilterPipe];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule];\n    },\n    exports: function () {\n      return [MultiSelectComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MultiSelectComponent, NgMultiSelectDropDownModule, DROPDOWN_CONTROL_VALUE_ACCESSOR as ɵa, ListFilterPipe as ɵb, ClickOutsideDirective as ɵc }; //# sourceMappingURL=ng-multiselect-dropdown.js.map","map":null,"metadata":{},"sourceType":"module"}