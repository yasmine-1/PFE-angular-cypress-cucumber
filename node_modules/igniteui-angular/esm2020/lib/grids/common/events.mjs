export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"events.js","sourceRoot":"","sources":["../../../../../../projects/igniteui-angular/src/lib/grids/common/events.ts"],"names":[],"mappings":"","sourcesContent":["import { IBaseEventArgs, CancelableEventArgs } from '../../core/utils';\nimport { GridKeydownTargetType } from './enums';\nimport { CellType, ColumnType, GridType, RowType } from './grid.interface';\nimport { IFilteringExpressionsTree } from '../../data-operations/filtering-expressions-tree';\nimport { IgxBaseExporter } from '../../services/exporter-common/base-export-service';\nimport { IgxExporterOptionsBase } from '../../services/exporter-common/exporter-options-base';\nimport { ISortingExpression } from '../../data-operations/sorting-strategy';\n\nexport interface IGridClipboardEvent {\n    data: any[];\n    cancel: boolean;\n}\n\nexport interface IGridCellEventArgs extends IBaseEventArgs {\n    cell: CellType;\n    event: Event;\n}\n\nexport interface IGridEditDoneEventArgs extends IBaseEventArgs {\n    rowID: any;\n    cellID?: {\n        rowID: any;\n        columnID: any;\n        rowIndex: number;\n    };\n    rowData: any;\n    oldValue: any;\n    newValue?: any;\n    event?: Event;\n    column?: ColumnType;\n    owner?: GridType;\n    isAddRow?: boolean;\n}\n\nexport interface IGridEditEventArgs extends CancelableEventArgs, IGridEditDoneEventArgs {\n}\n\n/**\n * The event arguments after a column's pin state is changed.\n * `insertAtIndex`specifies at which index in the pinned/unpinned area the column was inserted.\n * `isPinned` returns the actual pin state of the column after the operation completed.\n */\nexport interface IPinColumnEventArgs extends IBaseEventArgs {\n    column: ColumnType;\n    /**\n     * If pinned, specifies at which index in the pinned area the column is inserted.\n     * If unpinned, specifies at which index in the unpinned area the column is inserted.\n     */\n    insertAtIndex: number;\n    /**\n     * Returns the actual pin state of the column.\n     * If pinning/unpinning is succesfull, value of `isPinned` will change accordingly when read in the \"-ing\" and \"-ed\" event.\n     */\n    isPinned: boolean;\n}\n\n/**\n * The event arguments before a column's pin state is changed.\n * `insertAtIndex`specifies at which index in the pinned/unpinned area the column is inserted.\n * Can be changed in the `columnPin` event.\n * `isPinned` returns the actual pin state of the column. When pinning/unpinning is succesfull,\n * the value of `isPinned` will change accordingly when read in the \"-ing\" and \"-ed\" event.\n */\nexport interface IPinColumnCancellableEventArgs extends IPinColumnEventArgs, CancelableEventArgs {\n}\nexport interface IRowDataEventArgs extends IBaseEventArgs {\n    data: any;\n}\n\nexport interface IColumnResizeEventArgs extends IBaseEventArgs {\n    column: ColumnType;\n    prevWidth: string;\n    newWidth: string;\n}\n\nexport interface IColumnResizingEventArgs extends IColumnResizeEventArgs, CancelableEventArgs {\n}\n\nexport interface IRowSelectionEventArgs extends CancelableEventArgs, IBaseEventArgs {\n    readonly oldSelection: any[];\n    newSelection: any[];\n    readonly added: any[];\n    readonly removed: any[];\n    readonly event?: Event;\n}\n\nexport interface IColumnSelectionEventArgs extends CancelableEventArgs, IBaseEventArgs {\n    readonly oldSelection: string[];\n    newSelection: string[];\n    readonly added: string[];\n    readonly removed: string[];\n    readonly event?: Event;\n}\n\nexport interface ISearchInfo {\n    searchText: string;\n    caseSensitive: boolean;\n    exactMatch: boolean;\n    activeMatchIndex: number;\n    matchInfoCache: any[];\n}\n\nexport interface IGridToolbarExportEventArgs extends IBaseEventArgs {\n    grid: GridType;\n    exporter: IgxBaseExporter;\n    options: IgxExporterOptionsBase;\n    cancel: boolean;\n}\n\nexport interface IColumnMovingStartEventArgs extends IBaseEventArgs {\n    source: ColumnType;\n}\n\nexport interface IColumnMovingEventArgs extends IBaseEventArgs {\n    source: ColumnType;\n    cancel: boolean;\n}\n\nexport interface IColumnMovingEndEventArgs extends IBaseEventArgs {\n    source: ColumnType;\n    target: ColumnType;\n    cancel: boolean;\n}\n\nexport interface IGridKeydownEventArgs extends IBaseEventArgs {\n    targetType: GridKeydownTargetType;\n    target: any;\n    event: Event;\n    cancel: boolean;\n}\n\nexport interface ICellPosition {\n    rowIndex: number;\n    visibleColumnIndex: number;\n}\n\nexport interface IRowDragEndEventArgs extends IBaseEventArgs {\n    dragDirective: any;\n    dragData: RowType;\n    dragElement: HTMLElement;\n    animation: boolean;\n}\n\nexport interface IRowDragStartEventArgs extends CancelableEventArgs, IBaseEventArgs {\n    dragDirective: any;\n    dragData: RowType;\n    dragElement: HTMLElement;\n}\n\nexport interface IRowToggleEventArgs extends IBaseEventArgs {\n    rowID: any;\n    expanded: boolean;\n    event?: Event;\n    cancel: boolean;\n}\n\n/**\n * Event emitted when a row's pin state changes.\n */\nexport interface IPinRowEventArgs extends IBaseEventArgs, CancelableEventArgs {\n    /**\n     * The ID of the row, that was pinned/unpinned.\n     *   ID is either the primaryKey value or the data record instance.\n     */\n    readonly rowID: any;\n    row?: RowType;\n    /** The index at which to pin the row in the pinned rows collection. */\n    insertAtIndex?: number;\n    /** Whether or not the row is pinned or unpinned. */\n    readonly isPinned: boolean;\n}\n\n/**\n * Event emitted when a grid is scrolled.\n */\nexport interface IGridScrollEventArgs extends IBaseEventArgs {\n    /** The scroll direction - vertical or horizontal. */\n    direction: string;\n    /** The original browser scroll event. */\n    event: Event;\n    /** The new scroll position */\n    scrollPosition: number;\n}\n\n/**\n * Event emitted when a checkbox in the checkbox\n * list of an IgxColumnActions component is clicked.\n */\nexport interface IColumnToggledEventArgs extends IBaseEventArgs {\n    /** The column that is toggled. */\n    column: ColumnType;\n    /** The checked state after the action. */\n    checked: boolean;\n}\n\nexport interface IActiveNodeChangeEventArgs extends IBaseEventArgs {\n    row: number;\n    column: number;\n    level?: number;\n    tag: GridKeydownTargetType;\n}\n\nexport interface ISortingEventArgs extends IBaseEventArgs, CancelableEventArgs {\n    sortingExpressions: ISortingExpression | Array<ISortingExpression>;\n}\n\nexport interface IFilteringEventArgs extends IBaseEventArgs, CancelableEventArgs {\n    filteringExpressions: IFilteringExpressionsTree;\n}\n\nexport interface IColumnVisibilityChangedEventArgs extends IBaseEventArgs {\n    column: any;\n    /**\n     * The new hidden state that the column will have, if operation is succesfull.\n     * Will be `true` when hiding and `false` when showing.\n     */\n    newValue: boolean;\n}\n\nexport interface IColumnVisibilityChangingEventArgs extends IColumnVisibilityChangedEventArgs, CancelableEventArgs {\n}\n\n"]}