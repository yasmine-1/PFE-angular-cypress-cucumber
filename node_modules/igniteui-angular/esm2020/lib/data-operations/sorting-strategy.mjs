export var SortingDirection;
(function (SortingDirection) {
    SortingDirection[SortingDirection["None"] = 0] = "None";
    SortingDirection[SortingDirection["Asc"] = 1] = "Asc";
    SortingDirection[SortingDirection["Desc"] = 2] = "Desc";
})(SortingDirection || (SortingDirection = {}));
export class DefaultSortingStrategy {
    constructor() { }
    static instance() {
        return this._instance || (this._instance = new this());
    }
    sort(data, fieldName, dir, ignoreCase, valueResolver, isDate, isTime) {
        const key = fieldName;
        const reverse = (dir === SortingDirection.Desc ? -1 : 1);
        const cmpFunc = (obj1, obj2) => this.compareObjects(obj1, obj2, key, reverse, ignoreCase, valueResolver, isDate, isTime);
        return this.arraySort(data, cmpFunc);
    }
    compareValues(a, b) {
        const an = (a === null || a === undefined);
        const bn = (b === null || b === undefined);
        if (an) {
            if (bn) {
                return 0;
            }
            return -1;
        }
        else if (bn) {
            return 1;
        }
        return a > b ? 1 : a < b ? -1 : 0;
    }
    compareObjects(obj1, obj2, key, reverse, ignoreCase, valueResolver, isDate, isTime) {
        let a = valueResolver.call(this, obj1, key, isDate, isTime);
        let b = valueResolver.call(this, obj2, key, isDate, isTime);
        if (ignoreCase) {
            a = a && a.toLowerCase ? a.toLowerCase() : a;
            b = b && b.toLowerCase ? b.toLowerCase() : b;
        }
        return reverse * this.compareValues(a, b);
    }
    arraySort(data, compareFn) {
        return data.sort(compareFn);
    }
}
DefaultSortingStrategy._instance = null;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydGluZy1zdHJhdGVneS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9kYXRhLW9wZXJhdGlvbnMvc29ydGluZy1zdHJhdGVneS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxNQUFNLENBQU4sSUFBWSxnQkFJWDtBQUpELFdBQVksZ0JBQWdCO0lBQ3hCLHVEQUFRLENBQUE7SUFDUixxREFBTyxDQUFBO0lBQ1AsdURBQVEsQ0FBQTtBQUNaLENBQUMsRUFKVyxnQkFBZ0IsS0FBaEIsZ0JBQWdCLFFBSTNCO0FBc0JELE1BQU0sT0FBTyxzQkFBc0I7SUFHL0IsZ0JBQTBCLENBQUM7SUFFcEIsTUFBTSxDQUFDLFFBQVE7UUFDbEIsT0FBTyxJQUFJLENBQUMsU0FBUyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUVNLElBQUksQ0FDUCxJQUFXLEVBQ1gsU0FBaUIsRUFDakIsR0FBcUIsRUFDckIsVUFBbUIsRUFDbkIsYUFBK0QsRUFDL0QsTUFBZ0IsRUFDaEIsTUFBZ0I7UUFFaEIsTUFBTSxHQUFHLEdBQUcsU0FBUyxDQUFDO1FBQ3RCLE1BQU0sT0FBTyxHQUFHLENBQUMsR0FBRyxLQUFLLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3pELE1BQU0sT0FBTyxHQUFHLENBQUMsSUFBUyxFQUFFLElBQVMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLGFBQWEsRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDbkksT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRU0sYUFBYSxDQUFDLENBQU0sRUFBRSxDQUFNO1FBQy9CLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssU0FBUyxDQUFDLENBQUM7UUFDM0MsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxTQUFTLENBQUMsQ0FBQztRQUMzQyxJQUFJLEVBQUUsRUFBRTtZQUNKLElBQUksRUFBRSxFQUFFO2dCQUNKLE9BQU8sQ0FBQyxDQUFDO2FBQ1o7WUFDRCxPQUFPLENBQUMsQ0FBQyxDQUFDO1NBQ2I7YUFBTSxJQUFJLEVBQUUsRUFBRTtZQUNYLE9BQU8sQ0FBQyxDQUFDO1NBQ1o7UUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRVMsY0FBYyxDQUNwQixJQUFTLEVBQ1QsSUFBUyxFQUNULEdBQVcsRUFDWCxPQUFlLEVBQ2YsVUFBbUIsRUFDbkIsYUFBaUYsRUFDakYsTUFBZSxFQUNmLE1BQWU7UUFFZixJQUFJLENBQUMsR0FBRyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztRQUM1RCxJQUFJLENBQUMsR0FBRyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztRQUM1RCxJQUFJLFVBQVUsRUFBRTtZQUNaLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDN0MsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNoRDtRQUNELE9BQU8sT0FBTyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFFUyxTQUFTLENBQUMsSUFBVyxFQUFFLFNBQTRDO1FBQ3pFLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNoQyxDQUFDOztBQTFEZ0IsZ0NBQVMsR0FBMkIsSUFBSSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUJhc2VFdmVudEFyZ3MgfSBmcm9tICcuLi9jb3JlL3V0aWxzJztcbmltcG9ydCB7IEdyaWRUeXBlIH0gZnJvbSAnLi4vZ3JpZHMvY29tbW9uL2dyaWQuaW50ZXJmYWNlJztcblxuZXhwb3J0IGVudW0gU29ydGluZ0RpcmVjdGlvbiB7XG4gICAgTm9uZSA9IDAsXG4gICAgQXNjID0gMSxcbiAgICBEZXNjID0gMlxufVxuXG5leHBvcnQgaW50ZXJmYWNlIElTb3J0aW5nRXhwcmVzc2lvbiBleHRlbmRzIElCYXNlRXZlbnRBcmdzIHtcbiAgICBmaWVsZE5hbWU6IHN0cmluZztcbiAgICBkaXI6IFNvcnRpbmdEaXJlY3Rpb247XG4gICAgaWdub3JlQ2FzZT86IGJvb2xlYW47XG4gICAgc3RyYXRlZ3k/OiBJU29ydGluZ1N0cmF0ZWd5O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElTb3J0aW5nU3RyYXRlZ3kge1xuICAgIHNvcnQ6IChcbiAgICAgICAgZGF0YTogYW55W10sXG4gICAgICAgIGZpZWxkTmFtZTogc3RyaW5nLFxuICAgICAgICBkaXI6IFNvcnRpbmdEaXJlY3Rpb24sXG4gICAgICAgIGlnbm9yZUNhc2U6IGJvb2xlYW4sXG4gICAgICAgIHZhbHVlUmVzb2x2ZXI6IChvYmo6IGFueSwga2V5OiBzdHJpbmcsIGlzRGF0ZT86IGJvb2xlYW4pID0+IGFueSxcbiAgICAgICAgaXNEYXRlPzogYm9vbGVhbixcbiAgICAgICAgaXNUaW1lPzogYm9vbGVhbixcbiAgICAgICAgZ3JpZD86IEdyaWRUeXBlXG4gICAgKSA9PiBhbnlbXTtcbn1cblxuZXhwb3J0IGNsYXNzIERlZmF1bHRTb3J0aW5nU3RyYXRlZ3kgaW1wbGVtZW50cyBJU29ydGluZ1N0cmF0ZWd5IHtcbiAgICBwcm90ZWN0ZWQgc3RhdGljIF9pbnN0YW5jZTogRGVmYXVsdFNvcnRpbmdTdHJhdGVneSA9IG51bGw7XG5cbiAgICBwcm90ZWN0ZWQgY29uc3RydWN0b3IoKSB7IH1cblxuICAgIHB1YmxpYyBzdGF0aWMgaW5zdGFuY2UoKTogRGVmYXVsdFNvcnRpbmdTdHJhdGVneSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZSB8fCAodGhpcy5faW5zdGFuY2UgPSBuZXcgdGhpcygpKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc29ydChcbiAgICAgICAgZGF0YTogYW55W10sXG4gICAgICAgIGZpZWxkTmFtZTogc3RyaW5nLFxuICAgICAgICBkaXI6IFNvcnRpbmdEaXJlY3Rpb24sXG4gICAgICAgIGlnbm9yZUNhc2U6IGJvb2xlYW4sXG4gICAgICAgIHZhbHVlUmVzb2x2ZXI6IChvYmo6IGFueSwga2V5OiBzdHJpbmcsIGlzRGF0ZT86IGJvb2xlYW4pID0+IGFueSxcbiAgICAgICAgaXNEYXRlPzogYm9vbGVhbixcbiAgICAgICAgaXNUaW1lPzogYm9vbGVhblxuICAgICkge1xuICAgICAgICBjb25zdCBrZXkgPSBmaWVsZE5hbWU7XG4gICAgICAgIGNvbnN0IHJldmVyc2UgPSAoZGlyID09PSBTb3J0aW5nRGlyZWN0aW9uLkRlc2MgPyAtMSA6IDEpO1xuICAgICAgICBjb25zdCBjbXBGdW5jID0gKG9iajE6IGFueSwgb2JqMjogYW55KSA9PiB0aGlzLmNvbXBhcmVPYmplY3RzKG9iajEsIG9iajIsIGtleSwgcmV2ZXJzZSwgaWdub3JlQ2FzZSwgdmFsdWVSZXNvbHZlciwgaXNEYXRlLCBpc1RpbWUpO1xuICAgICAgICByZXR1cm4gdGhpcy5hcnJheVNvcnQoZGF0YSwgY21wRnVuYyk7XG4gICAgfVxuXG4gICAgcHVibGljIGNvbXBhcmVWYWx1ZXMoYTogYW55LCBiOiBhbnkpOiBudW1iZXIge1xuICAgICAgICBjb25zdCBhbiA9IChhID09PSBudWxsIHx8IGEgPT09IHVuZGVmaW5lZCk7XG4gICAgICAgIGNvbnN0IGJuID0gKGIgPT09IG51bGwgfHwgYiA9PT0gdW5kZWZpbmVkKTtcbiAgICAgICAgaWYgKGFuKSB7XG4gICAgICAgICAgICBpZiAoYm4pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfSBlbHNlIGlmIChibikge1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGEgPiBiID8gMSA6IGEgPCBiID8gLTEgOiAwO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBjb21wYXJlT2JqZWN0cyhcbiAgICAgICAgb2JqMTogYW55LFxuICAgICAgICBvYmoyOiBhbnksXG4gICAgICAgIGtleTogc3RyaW5nLFxuICAgICAgICByZXZlcnNlOiBudW1iZXIsXG4gICAgICAgIGlnbm9yZUNhc2U6IGJvb2xlYW4sXG4gICAgICAgIHZhbHVlUmVzb2x2ZXI6IChvYmo6IGFueSwga2V5OiBzdHJpbmcsIGlzRGF0ZT86IGJvb2xlYW4sIGlzVGltZT86IGJvb2xlYW4pID0+IGFueSxcbiAgICAgICAgaXNEYXRlOiBib29sZWFuLFxuICAgICAgICBpc1RpbWU6IGJvb2xlYW5cbiAgICApIHtcbiAgICAgICAgbGV0IGEgPSB2YWx1ZVJlc29sdmVyLmNhbGwodGhpcywgb2JqMSwga2V5LCBpc0RhdGUsIGlzVGltZSk7XG4gICAgICAgIGxldCBiID0gdmFsdWVSZXNvbHZlci5jYWxsKHRoaXMsIG9iajIsIGtleSwgaXNEYXRlLCBpc1RpbWUpO1xuICAgICAgICBpZiAoaWdub3JlQ2FzZSkge1xuICAgICAgICAgICAgYSA9IGEgJiYgYS50b0xvd2VyQ2FzZSA/IGEudG9Mb3dlckNhc2UoKSA6IGE7XG4gICAgICAgICAgICBiID0gYiAmJiBiLnRvTG93ZXJDYXNlID8gYi50b0xvd2VyQ2FzZSgpIDogYjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmV2ZXJzZSAqIHRoaXMuY29tcGFyZVZhbHVlcyhhLCBiKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgYXJyYXlTb3J0KGRhdGE6IGFueVtdLCBjb21wYXJlRm4/OiAoYXJnMDogYW55LCBhcmcxOiBhbnkpID0+IG51bWJlcik6IGFueVtdIHtcbiAgICAgICAgcmV0dXJuIGRhdGEuc29ydChjb21wYXJlRm4pO1xuICAgIH1cbn0iXX0=